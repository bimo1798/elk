services:
  apm-server:
   container_name: apm-server
   image: docker.elastic.co/apm/apm-server:8.12.2
   ports:
    - 8200:8200
   depends_on:
     - elasticsearch
     - kibana
   #networks:
    #- elastic
   command: >
     apm-server -e
       -E apm-server.rum.enabled=true
       -E setup.kibana.host=kibana:5601
       -E setup.template.settings.index.number_of_replicas=0
       -E apm-server.kibana.enabled=true
       -E apm-server.kibana.host=kibana:5601
       -E output.elasticsearch.hosts=["elasticsearch:9200"]	
       -E output.elasticsearch.username=elastic
       -E output.elasticsearch.password=elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      #- certs:/usr/share/elasticsearch/config/certs
      #- esdata01:/usr/share/elasticsearch/data
      - esSingle01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=elasticsearch
      - cluster.name=${CLUSTER_NAME}
      #- cluster.initial_master_nodes=elasticsearch
      #- discovery.seed_hosts=es02,es03
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=false
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      #- xpack.security.http.ssl.key=certs/es01/es01.key
      #- xpack.security.http.ssl.certificate=certs/es01/es01.crt
      #- xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=false
      #- xpack.security.transport.ssl.key=certs/es01/es01.key
      #- xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      #- xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      #- xpack.security.transport.ssl.verification_mode=certificate
      #- xpack.license.self_generated.type=${LICENSE}
    #mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kibana:
    # depends_on:
    #   es01:
    #     condition: service_healthy
    #   es02:
    #     condition: service_healthy
    #   es03:
    #     condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      #- certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      #- SERVERNAME=kibana
      #- ELASTICSEARCH_HOSTS=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      #- ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    mem_limit: ${MEM_LIMIT}

  logstash:
    image: logstash:8.12.2
    container_name: logstash
    restart: unless-stopped
    volumes:
    - ./logstash_dir/logstash.conf:/logstash_dir/logstash.conf
    - ./logstash_dir/kibana-audit.conf:/logstash_dir/kibana-audit.conf
    - ./logstash_dir/pipelines.yml:/usr/share/logstash/config/pipelines.yml
    - ./kibana_dir/logs/audit.json:/kibana_dir/logs/audit.json:ro
    command: logstash -f '/logstash_dir/{logstash.conf,kibana-audit.conf}'
    depends_on:
      - elasticsearch
    ports:
    - '9600:9600'
    environment:
     - xpack.monitoring.enabled=false 
     #- "LS_JAVA_OPTS: -Xmx2048m -Xms256m"
    # networks:
    #   - elastic
      
volumes:
  certs:
    driver: local
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  kibanadata:
    driver: local
  esSingle01:
    driver: local